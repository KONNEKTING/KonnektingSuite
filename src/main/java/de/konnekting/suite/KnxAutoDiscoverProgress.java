/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.konnekting.suite;

import de.root1.slicknx.AutoDiscoverProgressListener;
import de.root1.slicknx.Knx;
import de.root1.slicknx.KnxException;
import de.root1.slicknx.KnxInterfaceDevice;
import java.awt.Frame;
import java.lang.reflect.InvocationTargetException;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author achristian
 */
public class KnxAutoDiscoverProgress extends javax.swing.JDialog implements AutoDiscoverProgressListener {

    private List<KnxInterfaceDevice> deviceList = new ArrayList<>();

    /**
     * Creates new form KnxAutoDiscoverProgress
     */
    public KnxAutoDiscoverProgress(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        progressbar.setIndeterminate(true);
        progressbar.setMaximum(0);
        progressbar.setValue(0);
    }

    @Override
    public void setVisible(boolean b) {
        if (b) {
            final AutoDiscoverProgressListener tthis = this;
            new BackgroundTask("KNX Auto Discovery", Thread.NORM_PRIORITY) {

                @Override
                public void run() {
                    try {
                        Knx.discoverInterfaceDevices(15, tthis);
                    } catch (KnxException ex) {
                        ex.printStackTrace();
                    }
                }
            };
        }
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressbar = new javax.swing.JProgressBar();
        knxAutoDiscoverInProgress = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/konnekting/suite/i18n/language"); // NOI18N
        knxAutoDiscoverInProgress.setText(bundle.getString("KnxAutoDiscoverProgress.progressLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(knxAutoDiscoverInProgress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knxAutoDiscoverInProgress)
                    .addComponent(messageLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel knxAutoDiscoverInProgress;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JProgressBar progressbar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onProgress(int i, int max, NetworkInterface iface, InetAddress address) {

        if (max > 2) {
            progressbar.setIndeterminate(false);
        }
        progressbar.setMaximum(max);
        progressbar.setValue(i);
        
        String networkname = iface.getName();
        if (!networkname.equals(iface.getDisplayName())) {
            networkname+="/"+iface.getDisplayName();
        }
        messageLabel.setText(networkname);
    }

    @Override
    public void done(List<KnxInterfaceDevice> devices) {
        try {
            SwingUtilities.invokeAndWait(new Runnable() {
                @Override
                public void run() {
                    setVisible(false);
                }
            });
        } catch (InterruptedException ex) {
        } catch (InvocationTargetException ex) {
        }
        deviceList = devices;
    }

    @Override
    public void noResult() {
        try {
            SwingUtilities.invokeAndWait(new Runnable() {
                @Override
                public void run() {
                    setVisible(false);
                }
            });
        } catch (InterruptedException ex) {
        } catch (InvocationTargetException ex) {
        }
    }

    public List<KnxInterfaceDevice> getDeviceList() {
        return deviceList;
    }

}
